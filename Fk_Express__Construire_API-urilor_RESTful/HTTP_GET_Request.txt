
	HTTP GET Request



 (1) Cream Matricea de Obiecte:
____________________________________________________________
// MATRICE DE OBIECTE:
const cursuri = [
    { id: 1, nume: 'Curs 1' },
    { id: 2, nume: 'Curs 2' },
    { id: 3, nume: 'Curs 3' }
];
____________________________________________________________



 (2) Adaugam 'Matricea de Obiecte' in 'Ruta 2':
____________________________________________________________

// RUTA 2: '/API/CURSURI'
app.get('/api/cursuri', (req, res) => {
    // RASPUNSUL - MATRICE DE OBIECTE:
    res.send(cursuri);
});
____________________________________________________________







 (3) In 'Ruta 3' Cream 'Logica' pentru 'Preluarea unui Singur Curs':
____________________________________________________________
// RUTA 3 - 'PRELUAREA'  UNUI 'SINGUR CURS' - PRIN PARAMETRUL ':ID'
app.get('/api/cursuri/:id', (req, res) => {
    // PRELUAREA OBIECTULUI 'CURS' - PRIN APELAREA MET. 'FIND(FUNCTIA_SAGEATA)':
    const curs = cursuri.find(c => c.id === parseInt(req.params.id))

    // DACA 'NU EXISTA CURSUL' PT. UN 'ID' DAT:
    if (!curs)
        res.status(404).send('Oiectul nu a fost gasit!');
    res.send(curs);
});
____________________________________________________________




>> Accesam Link-ul in Browser:
____________________________________________________________

	http://localhost:3000/api/cursuri/1
____________________________________________________________




>> Afisarea in Browser:
____________________________________________________________

{"id":1,"nume":"Curs 1"}
____________________________________________________________





>> Daca Accesam un Obiect 'Inexistent':
____________________________________________________________

	http://localhost:3000/api/cursuri/4
____________________________________________________________




>> Afisarea Mesaj in Browser:
____________________________________________________________

Oiectul nu a fost gasit!
____________________________________________________________
	>> Requestul in 'DevTool / Network/All/Refresh':
	>> este '404'







